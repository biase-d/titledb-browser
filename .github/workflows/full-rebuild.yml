name: Full Database Rebuild

on:
  workflow_dispatch:
  
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Checkout nx-performance data repository
        uses: actions/checkout@v4
        with:
          repository: biase-d/nx-performance
          path: data/nx-performance
          fetch-depth: 0

      - name: Checkout titledb_filtered data repository
        uses: actions/checkout@v4
        with:
          repository: masagrator/titledb_filtered
          path: data/titledb_filtered

      - name: Get latest data repo commit hash
        id: data_commit
        run: echo "sha=$(git -C data/nx-performance rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Cache Build Artifacts
        uses: actions/cache@v4
        id: build_cache
        with:
          path: .cache
          key: ${{ runner.os }}-build-artifacts-${{ steps.data_commit.outputs.sha }}
          restore-keys: |
            ${{ runner.os }}-build-artifacts-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Apply database migrations
        run: npx drizzle-kit migrate
        env:
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}

      - name: Run build script to sync database
        run: node scripts/build.js --full-rebuild
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
