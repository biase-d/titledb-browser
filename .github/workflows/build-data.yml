name: Build and Deploy Data Index

on:
  # Runs on a schedule (e.g., every 15 minutes) to check for updates.
  schedule:
    - cron: '*/15 * * * *'

  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current upstream commit hash
        id: get_upstream_hash
        run: |
          # Use the GitHub API to get the SHA of the latest commit on the main branch.
          current_hash=$(gh api repos/masagrator/titledb_filtered/commits/main --jq .sha)
          echo "Current upstream hash: $current_hash"
          echo "current_hash=$current_hash" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download last known commit hash
        uses: actions/download-artifact@v4
        with:
          name: last-upstream-commit-hash
          path: .
        continue-on-error: true

      - name: Check for changes
        id: check_for_changes
        run: |
          if [[ -f last-upstream-commit-hash.txt ]]; then
            last_hash=$(cat last-upstream-commit-hash.txt)
            echo "Last known hash: $last_hash"
          else
            last_hash=""
            echo "No last known hash found. Forcing build."
          fi

          if [[ "${{ steps.get_upstream_hash.outputs.current_hash }}" == "$last_hash" ]]; then
            echo "No new commits found. Exiting."
            echo "should_build=false" >> $GITHUB_OUTPUT
          else
            echo "New commits detected. Proceeding with build."
            echo "should_build=true" >> $GITHUB_OUTPUT
          fi

      - name: Set up Node.js
        if: steps.check_for_changes.outputs.should_build == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Clone upstream data repository
        if: steps.check_for_changes.outputs.should_build == 'true'
        uses: actions/checkout@v4
        with:
          repository: masagrator/titledb_filtered
          path: ./tmp/titledb_data
          fetch-depth: 1

      - name: Install dependencies
        if: steps.check_for_changes.outputs.should_build == 'true'
        run: npm install

      - name: Build the rich index file from local data
        if: steps.check_for_changes.outputs.should_build == 'true'
        run: npm run build:index

      - name: Deploy index file to GitHub Pages
        if: steps.check_for_changes.outputs.should_build == 'true'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./static
          publish_branch: gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: Store new commit hash
        if: steps.check_for_changes.outputs.should_build == 'true'
        run: echo "${{ steps.get_upstream_hash.outputs.current_hash }}" > last-upstream-commit-hash.txt

      - name: Upload new commit hash artifact
        if: steps.check_for_changes.outputs.should_build == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: last-upstream-commit-hash
          path: last-upstream-commit-hash.txt